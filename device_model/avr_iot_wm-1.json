{
  "@context": "dtmi:dtdl:context;2",
  "@id": "dtmi:com:Microchip:AVR_IoT_WM;1",
  "@type": "Interface",
  "displayName": "AVR-IoT WM",
  "description": "Reports device temperature, light intensity, and the current state of the 2 buttons & 4 LEDs.  Provides ability to turn on/off any of the 4 LEDs.",
  "contents": [
    {
      "@type": [
        "Telemetry",
        "Temperature"
      ],
      "name": "temperature",
      "displayName": {
        "en": "Temperature"
      },
      "description": "Temperature in degrees Celsius from Microchip MCP9808 high-accuracy temperature sensor",
      "schema": "double",
      "unit": "degreeCelsius"
    },
    {
      "@type": [
        "Telemetry",
        "Illuminance"
      ],
      "name": "light",
      "displayName": {
        "en": "Brightness from light sensor"
      },
      "description": "Brightness in illuminance from Vishay TEMT6000X01 ambient light sensor",
      "schema": "integer",
      "unit": "lux"
    },
    {
      "@type": [
        "Telemetry"
      ],
      "name": "button_event",
      "displayName": {
        "en": "SW0/SW1 button push event"
      },
      "description": "Event triggered when button is pressed",
      "schema": {
        "@type": "Object",
        "fields": [
          {
            "name": "button_name",
            "schema": "string"
          },
          {
            "name": "press_count",
            "schema": "integer"
          }
        ]
      }
    },
    {
      "@type": [
        "Property"
      ],
      "name": "led_blue",
      "displayName": {
        "en": "Blue LED state"
      },
      "description": "Returns current state of the Blue LED. If True, the Blue LED is on and the WiFi AP is connected.",
      "schema": {
        "@type": "Enum",
        "valueSchema": "integer",
        "enumValues": [
          {
            "name": "On",
            "displayName": {
              "en": "Turn On"
            },
            "enumValue": 1,
            "description": "Blue LED is turned on.",
            "comment": "Blue LED is in the On state."
          },
          {
            "name": "Off",
            "displayName": {
              "en": "Turn Off"
            },
            "enumValue": 2,
            "description": "Blue LED is turned Off.",
            "comment": "Blue LED is in the Off state."
          },
          {
            "name": "Blink",
            "displayName": {
              "en": "Blink Blue LED"
            },
            "enumValue": 3,
            "description": "Blue LED is blinking.",
            "comment": "Blue LED is blinking."
          }
        ]
      },
      "writable": false
    },
    {
      "@type": [
        "Property"
      ],
      "name": "led_green",
      "displayName": {
        "en": "Green LED state"
      },
      "description": "Returns the current state of the Green LED. If True, Green LED is on and connected to cloud.",
      "schema": {
        "@type": "Enum",
        "valueSchema": "integer",
        "enumValues": [
          {
            "name": "On",
            "displayName": {
              "en": "Turn On"
            },
            "enumValue": 1,
            "description": "Green LED is turned on.",
            "comment": "Green LED is in the On state."
          },
          {
            "name": "Off",
            "displayName": {
              "en": "Turn Off"
            },
            "enumValue": 2,
            "description": "Green LED is turned Off.",
            "comment": "Green LED is in the Off state."
          },
          {
            "name": "Blink",
            "displayName": {
              "en": "Blink Green LED"
            },
            "enumValue": 3,
            "description": "Green LED is blinking.",
            "comment": "Green LED is blinking."
          }
        ]
      },
      "writable": false
    },
    {
      "@type": [
        "Property"
      ],
      "name": "led_yellow",
      "displayName": {
        "en": "Yellow LED state"
      },
      "description": "Turn On/Off Yellow LED",
      "schema": {
        "@type": "Enum",
        "valueSchema": "integer",
        "enumValues": [
          {
            "name": "On",
            "displayName": {
              "en": "Turn On"
            },
            "enumValue": 1,
            "description": "Yellow LED is turned on.",
            "comment": "Yellow LED is in the On state."
          },
          {
            "name": "Off",
            "displayName": {
              "en": "Turn Off"
            },
            "enumValue": 2,
            "description": "Yellow LED is turned Off.",
            "comment": "Yellow LED is in the Off state."
          },
          {
            "name": "Blink",
            "displayName": {
              "en": "Blink Yellow LED"
            },
            "enumValue": 3,
            "description": "Yellow LED is blinking.",
            "comment": "Yellow LED is blinking."
          }
        ]
      },
      "writable": true
    },
    {
      "@type": [
        "Property"
      ],
      "name": "led_red",
      "displayName": {
        "en": "Red LED state"
      },
      "description": "Current state of the Red LED",
      "schema": {
        "@type": "Enum",
        "valueSchema": "string",
        "enumValues": [
          {
            "name": "On",
            "displayName": {
              "en": "On"
            },
            "enumValue": "On",
            "description": "Red LED is turned on.",
            "comment": "Red LED is in the On state."
          },
          {
            "name": "Off",
            "displayName": {
              "en": "Off"
            },
            "enumValue": "Off",
            "description": "Red LED is turned Off.",
            "comment": "Red LED is in the Off state."
          },
          {
            "name": "Blink",
            "displayName": {
              "en": "Blink"
            },
            "enumValue": "Blink",
            "description": "Red LED is blinking.",
            "comment": "Red LED is blinking."
          }
        ]
      },
      "writable": false
    },
    {
      "@type": [
        "Property",
        "TimeSpan"
      ],
      "name": "telemetryInterval",
      "schema": "integer",
      "unit": "second",
      "displayName": {
        "en": "Set Telemetry Interval"
      },
      "description": "Sets interval to send telemetry in seconds",
      "writable": true
    },
    {
      "@type": "Command",
      "description": {
        "en": "Reboot AVR-IoT with the specified delay (e.g. PT5S for 5 seconds)."
      },
      "displayName": {
        "en": "Reboot"
      },
      "name": "reboot",
      "request": {
        "@type": "CommandPayload",
        "description": {
          "en": "Number of seconds to delay reboot (e.g. PT5S for 5 seconds)."
        },
        "displayName": {
          "en": "Reboot Delay"
        },
        "name": "delay",
        "schema": "duration"
      },
      "response": {
        "@type": "CommandPayload",
        "displayName": {
          "en": "Response for command"
        },
        "name": "response",
        "schema": {
          "@type": "Object",
          "fields": [
            {
              "displayName": {
                "en": "Message from reboot handler"
              },
              "name": "status",
              "schema": "string"
            },
            {
              "displayName": {
                "en": "Number of seconds to delay the reboot"
              },
              "name": "delay",
              "schema": "integer"
            }
          ]
        }
      }
    },
    {
      "@type": "Command",
      "description": {
          "en": "Echo a text message sent from the cloud"
      },
      "displayName": {
          "en": "Echo Message"
      },
      "name": "echoMsg",
      "request": {
          "@type": "CommandPayload",
          "description": {
              "en": "Text message for the device to echo back to the cloud"
          },
          "displayName": {
              "en": "Message"
          },
          "name": "payload",
          "schema": {
              "@type": "Object",
              "fields": [
                  {
                      "displayName": {
                          "en": "Message to echo"
                      },
                      "name": "echoMsgString",
                      "schema": "string"
                  }
              ]
          }
      },
      "response": {
          "@type": "CommandPayload",
          "displayName": {
              "en": "Response for command"
          },
          "name": "response",
          "schema": {
              "@type": "Object",
              "fields": [
                  {
                      "displayName": {
                          "en": "Message from echo message handler"
                      },
                      "name": "echoMsgString",
                      "schema": "string"
                  }
              ]
          }
      }
    }
  ]
}
